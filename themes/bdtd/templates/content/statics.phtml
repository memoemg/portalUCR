<!-- /static.phml -->
<style type="text/css">
	.ms-selectable > .ms-list{
		height: 3.5em !important;
	}
	.ms-selection > .ms-list{
		height: 9.1em !important;	
	}
	/*.ms-selectable > ul > * */
	.disableLi{
		pointer-events: none;
	}
</style>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.quicksearch/2.3.1/jquery.quicksearch.js"></script>
<script src="  https://cdnjs.cloudflare.com/ajax/libs/multi-select/0.9.12/js/jquery.multi-select.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/multi-select/0.9.12/css/multi-select.min.css">

<div class="row about">  
  <div class="col-sm-12">
    <h3 style="color:#0a630a">Indicadores</h3>
      <p class="text">
        Indicadores da Biblioteca Digital Brasileira de Teses e Dissertações (BDTD)
      </p>
  </div>
</div>

<div id="tabs">
  <ul>
    <li><a href="#row-1">Gráficos Geral</a></li>
    <!--li><a href="#row-2">Gráficos Customizados</a></li>
    <li><a href="#row-3">Aenean lacinia</a></li-->
  </ul>
  <div id='row-1' class="row"></div> 
  <div id='row-2' class="row">
  	<!--select id='custom-headers' multiple='multiple' class="searchables">
	  <!--option value='elem_1'> UNB </option>
	  <option value='elem_2'> USP </option>
	  <option value='elem_3'> UFRJ </option>
	  <option value='elem_4'> UNICAMP </option>
	  ...
	  <option value='elem_100'>elem 100</option>
	</select-->

	<div id='multselect'> </div>
  </div> 

  <!--div id='row-3' class="row">TESTE 3</div-->
</div>


<script>
//Monta combo de instituições
function montaCombo(){
	$.ajax( {
	      type:'Get',
	      url:'/vufind/api/v1/search?type=AllFields&facet[]=instname_str&sort=relevance&page=1&limit=0',
	      success:function(data) {        
	        $.each(data.facets.instname_str, function( index, facet ) {
	        	var options = $('<option></option>');
	        	options.attr('value',facet.value)
	        	options.append(facet.value)
	        	select.append(options);	          
	        });
	      	multiSelect(); //chamando a função para montar div com multiselect
	  	  }
	    });
	$('#multselect').append(select);
}


var select       = $('<select id=\'custom-headers\' multiple=\'multiple\' class=\"searchable\"> </select>');
var limiteSelect = 4;
$( function() {
	$( "#tabs" ).tabs(); // montando tab query 
	//montaCombo(); 
});


/**** Funcao para montar combo com plugin multselect *****/
function multiSelect (){
	$('.searchable').multiSelect({
	  selectableHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Consulte as instituições'>",
	  selectionHeader: "<input type='text' class='search-input' autocomplete='off' placeholder='Instituições selecionadas'>",
	  afterInit: function(ms){
	    var that = this,
	        $selectableSearch = that.$selectableUl.prev(),
	        $selectionSearch = that.$selectionUl.prev(),
	        selectableSearchString = '#'+that.$container.attr('id')+' .ms-elem-selectable:not(.ms-selected)',
	        selectionSearchString = '#'+that.$container.attr('id')+' .ms-elem-selection.ms-selected';

	    that.qs1 = $selectableSearch.quicksearch(selectableSearchString)
	    .on('keydown', function(e){
	      if (e.which === 40){
	        that.$selectableUl.focus();        
	        return false;
	      }
	    });

	    that.qs2 = $selectionSearch.quicksearch(selectionSearchString)
	    .on('keydown', function(e){
	      if (e.which == 40){
	        that.$selectionUl.focus();
	        return false;
	      }
	    });    
	  },  
	  
	  afterSelect: function(){
	    this.qs1.cache();
	    this.qs2.cache();
	    var instSelectionadas = $('.ms-selection > .ms-list > .ms-selected');
	    var qtd = instSelectionadas.length;	    
	    if(qtd > limiteSelect){    	
	    	$('.ms-selectable > ul > *').addClass('disableLi')
	    	$('.ms-selectable > input').attr("disabled", "disabled");
	    	alert('Limite de instituições atingido!!!!')
	    }
	  },
	  afterDeselect: function(){
	    this.qs1.cache();
	    this.qs2.cache();
	    var qtd = $('.ms-selection > .ms-list > .ms-selected').length;
	    if( qtd < (limiteSelect+1)){
	    	$('.ms-selectable > ul > *').removeClass('disableLi')
	    	$('.ms-selectable > input').removeAttr("disabled", "disabled");
	    }
	  }
	});
}

function createDiv(id,titleDiv){
    var svg = d3.select(id)
              .append("div")
              .attr("class", "col-sm-6")

    var title = svg.append("h2")
                  .text(titleDiv);

    return svg;
};

function lineGraph(id,titleDiv,url){

	var margin = {top: 20, right: 20, bottom: 105, left: 50},
        width  = 550 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

    var line = d3.line().x(function(d) { return x(d.value); }).y(function(d) { return y(d.count); });

	var svg = createDiv(id,titleDiv);

    var x = d3.scaleBand().range([0, width]).padding(0.1),
        y = d3.scaleLinear().rangeRound([height, 0]);

    var vg = svg.append("svg")
             .attr("width", "100%")
             .attr("height", "400")

    var g = vg.append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    d3.json(url, function(error, data) {
      if (error) throw error;
      //console.log(data.facets.institution.slice(0,10));      //console.log(t);      //console.log(data.facets.t.slice(0,10)); //console.log(data.facets[t])
     
		var facet   = Object.keys(data.facets);
      	var formats = data.facets[facet].slice(0,10);
		
		formats.sort(function(x, y){
			return d3.ascending(x.value, y.value)
		})

		x.domain(formats.map(function(d) { return d.value; }));
		y.domain([d3.min(formats, function(d) { return d.count; }), d3.max(formats, function(d) { return d.count; })]);

		g.append("g")
		  .attr("class", "axis")
		  .attr("transform", "translate(0," + height + ")")
		  .call(d3.axisBottom(x))
		.selectAll("text")
		  .style("text-anchor", "end")
		  .style("font-size", "11px")
		  .attr("dx", "-.8em")
		  .attr("dy", "-.55em")
		  .attr("transform", "rotate(-90)" );

		g.append("g")
		  .attr("class", "axis axis--y")
		  .call(d3.axisLeft(y).ticks(10,"s"))          
		.append("text")
		  .attr("transform", "rotate(-90)")
		  .attr("y", 6)
		  .attr("dy", "0.71em")
		  .attr("text-anchor", "end")
		  .text("Frequency");

		g.append("path")
		  .datum(formats)
		  .attr("fill", "none")
		  .attr("stroke", "steelblue")
		  .attr("stroke-linejoin", "round")
		  .attr("stroke-linecap", "round")
		  .attr("stroke-width", 1.5)
		  .attr("d", line);
	});
}



/*************************************************************************************
*************************************************************************************
*************************************************************************************
*************************************************************************************
**************************************************************************************/

/*************** 
	Variaveis globais
****************/
var tooltip = d3.select("body").append("div").attr("class", "toolTip");

/****************
 ****************/

function barGraph(id,titleDiv,url){
    
    var margin = {top: 20, right: 20, bottom: 105, left: 50},
        width  = 550 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

	var svg = createDiv(id,titleDiv);

    var x = d3.scaleBand().range([0, width]).padding(0.1),
        y = d3.scaleLinear().rangeRound([height, 0]);

    var vg = svg.append("svg")
             .attr("width", "100%")
             .attr("height", "400")

    var g = vg.append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    d3.json(url, function(error, data) {
      if (error) throw error;
      //console.log(data.facets.institution.slice(0,10));      //console.log(t);      //console.log(data.facets.t.slice(0,10)); //console.log(data.facets[t])
      
      var facet   = Object.keys(data.facets);
      var formats = data.facets[facet].slice(0,10);

      	formats.sort(function(x, y){
			//return d3.ascending(x.value, y.value)
			return x.value - y.value;
		});

      x.domain(formats.map(function(d) { return d.value; }));
      y.domain([0, d3.max(formats, function(d) { return d.count; })]);

      g.append("g")
          .attr("class", "axis axis--x")
          .attr("transform", "translate(0," + height + ")")
          .call(d3.axisBottom(x))
        .selectAll("text")
          .style("text-anchor", "end")
          .style("font-size", "11px")
          .attr("dx", "-.8em")
          .attr("dy", "-.55em")
          .attr("transform", "rotate(-90)" );

      g.append("g")
          .attr("class", "axis axis--y")
          .call(d3.axisLeft(y).ticks(10,"s"))
          
        .append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", "0.71em")
          .attr("text-anchor", "end")
          .text("Frequency");

      g.selectAll(".bar")
        .data(formats)
        .enter().append("rect")
          .attr("class", "bar")
          .attr("x", function(d) { return x(d.value); })
          .attr("y", function(d) { return y(d.count); })
          .attr("width", x.bandwidth())
          .attr("height", function(d) { return height - y(d.count); })
          .on("mousemove", function(d){
                tooltip
                  .style("left", d3.event.pageX - 50 + "px")
                  .style("top", d3.event.pageY - 70 + "px")
                  .style("display", "inline-block")
                  .html((d.value) + "<br>" + (d.count.toLocaleString('de-DE')));
            })
          .on("mouseout", function(d){ tooltip.style("display", "none");});
    });
}
//sel();

var url = "/vufind/api/v1/search?type=AllFields&facet[]=format&sort=relevance&page=1&limit=0" //SEARCH DOC BY TYPE
barGraph("#row-1","Quantidade de Documentos por Tipo",url)

url = "/vufind/api/v1/search?field[]=null&facet[]=institution&sort=relevance&limit=0" // SEARCH DOCs BY INSTITUITION
barGraph("#row-1","Quantidade de Documentos por Instituição", url);

url = "/vufind/api/v1/search?type=AllFields&facet[]=publishDate&sort=relevance&page=1&limit=0" //SEARCH DOCs BY DATE
barGraph("#row-1","Quantidade de Documentos por Ano", url);

url = "/vufind/api/v1/search?type=AllFields&facet[]=language&page=1&limit=0" //SEARCH DOCs BY language
barGraph("#row-1","Quantidade de Documentos por Idioma", url);

url = "/vufind/api/v1/search?facet[]=publishDate&page=1&limit=0"
//lineGraph("#row-2","Gráficos de publicação por Instituição", url);

//b();

</script>